version: '3.9'

x-env-license: &env-license-volume
  '${NEXUS_LICENSE_PATH:?err}:/sonatype-license.lic'

x-nxrm3-healthcheck: &nxrm3-healthcheck
  test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8081/service/rest/v1/status/writable"]
  interval: 10s
  timeout: 10s
  retries: 10
  start_period: 40s

x-nxrm3-volume-nexus-properties: &nxrm3-volume-nexus-properties
  './config/nexus-repo.properties:/nexus-data/etc/nexus.properties'

x-nxrm3-volume-casc-config: &nxrm3-volume-casc-config
  './config/nexus-repo-casc.yaml:/opt/nexus.yml:ro'

x-nxrm3-volume-casc-config-oss: &nxrm3-volume-casc-config-oss
  './config/nexus-repo-casc-oss.yaml:/opt/nexus.yml:ro'

x-nxrm3-volume-data: &nxrm3-volume-data
  '${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/nexus-data:/nexus-data:delegated'

secrets:
  admin_password:
    file: ./config/admin_password

services:

  nxiq_direct:
    image: "sonatype/nexus-iq-server:${NEXUS_IQ_SERVER_VERSION:?err}"
    environment:
      BASE_URL: "http://iq.localhost:8070"
    ports:
      - "8070:8070"
      - "8071:8071"
    profiles:
      - direct
    secrets:
      - admin_password
    volumes:
      - *env-license-volume
      - "./config/nexus-iq-config.yaml:/etc/nexus-iq-server/config.yml:delegated"
      - "${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/iq-data:/sonatype-work:delegated"
      - "${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/iq-logs:/opt/sonatype/nexus-iq-server/log:delegated"

  nxiq-proxied:
    image: "sonatype/nexus-iq-server:${NEXUS_IQ_SERVER_VERSION:?err}"
    environment:
      BASE_URL: "http://iq.localhost"
    networks:
      - platform
    profiles:
      - cicd
      - proxied
    secrets:
      - admin_password
    volumes:
      - *env-license-volume
      - "./config/nexus-iq-config.yaml:/etc/nexus-iq-server/config.yml:delegated"
      - "${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/iq-data:/sonatype-work:delegated"
      - "${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/iq-logs:/opt/sonatype/nexus-iq-server/log:delegated"
    
  nxrm3_direct:
    build: 
      context: ./nxrm3
      args:
        NEXUS_REPOSITORY_VERSION: "${NEXUS_REPOSITORY_VERSION}"
        NEXUS_CASC_PLUGIN_VERSION: "${NEXUS_CASC_PLUGIN_VERSION}"
    environment:
      BASE_URL: 'http://repo.localhost:8081'
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
      NEXUS_CASC_CONFIG: '/opt/nexus.yml'
      NEXUS_IQ_BASE_URL: 'http://iq.localhost:8070'
    healthcheck:
      << : *nxrm3-healthcheck
    ports:
      - '8081:8081'
    profiles:
      - direct
    secrets:
      - admin_password
    volumes: 
      - *env-license-volume
      - *nxrm3-volume-nexus-properties
      - *nxrm3-volume-casc-config
      - *nxrm3-volume-data

  nxrm3_direct_oss:
    build: 
      context: ./nxrm3
      args:
        NEXUS_REPOSITORY_VERSION: "${NEXUS_REPOSITORY_VERSION}"
        NEXUS_CASC_PLUGIN_VERSION: "${NEXUS_CASC_PLUGIN_VERSION}"
    environment:
    environment:
      BASE_URL: 'http://repo.localhost:8081'
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
      NEXUS_CASC_CONFIG: '/opt/nexus.yml'
    healthcheck:
      << : *nxrm3-healthcheck
    ports:
      - '8081:8081'
    profiles:
      - repoOssDemo
    secrets:
      - admin_password
    volumes: 
      - *nxrm3-volume-nexus-properties
      - *nxrm3-volume-casc-config-oss
      - *nxrm3-volume-data

  nxrm3-proxied:
    build: 
      context: ./nxrm3
      args:
        NEXUS_REPOSITORY_VERSION: "${NEXUS_REPOSITORY_VERSION}"
        NEXUS_CASC_PLUGIN_VERSION: "${NEXUS_CASC_PLUGIN_VERSION}"
    environment:
      BASE_URL: 'http://repo.localhost'
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
      NEXUS_CASC_CONFIG: '/opt/nexus.yml'
      NEXUS_IQ_BASE_URL: 'http://iq.localhost:8070'
    healthcheck:
      << : *nxrm3-healthcheck
    networks:
      - platform
    profiles:
      - cicd
      - proxied
    secrets:
      - admin_password
    volumes: 
      - *env-license-volume
      - *nxrm3-volume-nexus-properties
      - *nxrm3-volume-casc-config
      - *nxrm3-volume-data

  proxy:
    image: "nginx:${NGINX_VERSION:?err}"
    depends_on: 
      - nxrm3-proxied
      - nxiq-proxied
    environment:
      - NGINX_HOST=nexus-platform.localhost
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 20s
    networks:
      - platform
    ports:
      - "80:80"
    profiles:
      - proxied
    volumes:
      - "./config/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./config/nginx-www:/usr/share/nginx/html:ro"

  proxy_cicd:
    image: "nginx:${NGINX_VERSION:?err}"
    depends_on: 
      - nxrm3-proxied
      - nxiq-proxied
      - jenkins-proxied
    environment:
      - NGINX_HOST=nexus-platform.localhost
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 20s
    networks:
      - platform
    ports:
      - "80:80"
    profiles:
      - cicd
    volumes:
      - "./config/nginx-cicd.conf:/etc/nginx/nginx.conf:ro"
      - "./config/nginx-www:/usr/share/nginx/html:ro"

# ------- Other non Sonatype Services --------
  jenkins-proxied:
    build: ./jenkins
    environment: 
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_OPTS: '--argumentsRealm.roles.user=admin --argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin'
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost/login"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 30s
    networks:
      - platform
    profiles:
      - cicd
    volumes:
      - '${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/jenkins:/var/jenkins_home:delegated'
    
networks:
    platform: